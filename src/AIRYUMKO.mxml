<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication title="YUMKOO"  backgroundGradientAlphas="[1.0, 0.32]" backgroundGradientColors="[#A0B8C0, #878A8D]" minWidth="930" minHeight="700" xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" >
	<mx:HTTPService url="espanol.xml"   requestTimeout="0"   resultFormat="object" id="idiomas" result="Cargar_idioma(event,idiomas); "  useProxy="false"  method="POST" >
	</mx:HTTPService>
	<mx:Script>
		<![CDATA[
		  	import mx.controls.Image;
			import mx.collections.XMLListCollection;
		    [Bindable]
			[Embed(source="img/flexicono.png")]
			private var ico:Class;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent
			import mx.controls.Alert;
			import Clases.IDEComponentes;
			import Clases.ActiveRecords;
			import Clases.Zipfile;
			import mx.managers.PopUpManager;
			import Clases.Database;
            import mx.controls.Menu;
            import mx.events.CloseEvent;
            ///////////////////////////////////////////////////////
            import flight.db.activeRecord.TableCreator;
			import flash.utils.getQualifiedClassName;
            import Clases.Models.*;  
         	////////////////////////////////////////////////////////////////////////
			public var cont_id:int=0;
			public var mensaje_eliminar:String;
			public var mensaje_modulo_name:String;
			public var mensaje_modulo_vacio:String;
			public var mensaje_validacion_vacio:String;
			public var resultado_modulo:String;
			public var modulo_name_vacio:String;
			public var modulo_principal:String;
			public var modulo_relacionado:String;
			public var tipo_relacion:String;
			public var relacion_modulo_name:String;
			public var id_modulo:String;
			public var tree_index:int;
			public var last_id:String;
			public var datostree:String="";
			public var objects:Object = {};
			public var elementos:Object = {};
			[Bindable]
			public var selectedNode:XML;
			[Bindable] public var lista_componentes:ArrayCollection = new ArrayCollection([{label:"Campo de Texto", data:0},{label:"Area de texto", data:1},/*{label:"Moneda", data:3},*/{label:"Fecha", data:2},{label:"Encriptado", data:3},/*{label:"Tel�fono", data:6},*/{label:"Opción", data:4},{label:"Associación", data:5}]);
			[Bindable] public var relaciones:ArrayCollection = new ArrayCollection([{label:"Ninguno", data:1},{label:"Uno a Uno", data:1},{label:"Uno a Muchos", data:2},{label:"Muchos a Muchos", data:3}]);
			[Bindable] public var tipo_dato:ArrayCollection = new ArrayCollection([{label:"Numerico", data:1},{label:"Alfanumerico", data:2}]);
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			import mx.events.MenuEvent;

			public var stado:Boolean=false;
			public var cadena:String="";
			 public var TreeObject:Object
			
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		   public function init():void
			{
				Database.getInstance().initAndOpenDatabase()
				if (Database.getInstance().mod.findBySQL("select id,name from Modulos")!=null){
				myTree.dataProvider=IDEComponentes.getInstance().Crear_arbol(Database.getInstance().mod.findBySQL("select id,name from Modulos"));
				myTree.selectedIndex=0;
				TreeObject=(Database.getInstance().mod.findBySQL("select id,name from Modulos")[0])
				dataset.dataProvider=Database.getInstance().component.findAll(" modulo_id='"+TreeObject.id+"'",[]);
				Modulo_name.text=TreeObject.name;
				enabled_componente(true);
		 		dataset.dataProvider={};
				dataset.dataProvider=Database.getInstance().component.findBySQL("select id,etiqueta,identificador,tamano,requerido,componente,tipo,modulo_relacionado,tipo_relacion from componentes where modulo_id='"+TreeObject.id+"'");
			    this.id_modulo=TreeObject.id;
			    idiomas.send();
			    combox_associaciones.dataProvider=Database.getInstance().mod.findBySQL("select id,name from modulos where id!="+this.id_modulo+"");
				}else{
				idiomas.send();
				enabled_componente(false);	
				}
				var screenBounds:Rectangle = Screen.mainScreen.bounds;
				this.move((screenBounds.width-this.width)/2,(screenBounds.height-this.height)/2);
				this.usePreloader=true;
	        }


        public function showMenu(event:MouseEvent):void
        {   if (myTree.selectedIndex>=0&&myTree.selectedItem.@label!="App"){
            var menu:Menu = Menu.createMenu(null, menuData, false);
            menu.labelField="@label"
            menu.show(event.stageX, event.stageY)
            menu.addEventListener(MenuEvent.ITEM_CLICK,menuClickHandler);
          }
         }

		 private function menuClickHandler(event:MenuEvent):void {
		 	if (event.label=="Delete"){
		 	  Eliminar_modulos(this.id_modulo)
		 	  new_modulo_add()
		 	}
		  }

			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

			public function Cargar_idioma(event:ResultEvent,servicio:HTTPService):void{
				if(event.message.body.toString()!=""){
					titulo_modulo_name.text=servicio.lastResult.idioma.modulo_builder.titulo_modulo_name;
					componentes.text=servicio.lastResult.idioma.modulo_builder.componentes;
					modulo_tipo.text=servicio.lastResult.idioma.modulo_builder.componente_tipo;
					modulo_name.text=servicio.lastResult.idioma.modulo_builder.componente_name;
					identificador.text=servicio.lastResult.idioma.modulo_builder.identificador;
					Max_caracter.text=servicio.lastResult.idioma.modulo_builder.Max_caracter;
					tipo_valores.text=servicio.lastResult.idioma.modulo_builder.tipo_valores;
					datos.text=servicio.lastResult.idioma.modulo_builder.datos;
					data_id.headerText=servicio.lastResult.idioma.modulo_builder.data_id;
					data_Max_caracter.headerText=servicio.lastResult.idioma.modulo_builder.data_Max_caracter;
					data_componente.headerText=servicio.lastResult.idioma.modulo_builder.data_componente;
					data_requerido.headerText=servicio.lastResult.idioma.modulo_builder.data_requerido;
					data_tipo.headerText=servicio.lastResult.idioma.modulo_builder.data_tipo;
					data_etiqueta.headerText=servicio.lastResult.idioma.modulo_builder.data_etiqueta;
					agregar.label=servicio.lastResult.idioma.modulo_builder.boton_agregar;
					borrar.label=servicio.lastResult.idioma.modulo_builder.boton_borrar;
					panel_arbol.title=servicio.lastResult.idioma.modulo_builder.panel_arbol;
					panel_builder.title=servicio.lastResult.idioma.modulo_builder.panel_builder;
					mensaje_eliminar=servicio.lastResult.idioma.modulo_builder.mensaje_eliminar;
					mensaje_modulo_name=servicio.lastResult.idioma.modulo_builder.mensaje_modulo_name;
					mensaje_validacion_vacio=servicio.lastResult.idioma.modulo_builder.mensaje_validacion_vacio;
					requerido.text=servicio.lastResult.idioma.modulo_builder.requerido;
					etiqueta.text=servicio.lastResult.idioma.modulo_builder.data_etiqueta;
					resultado_modulo=servicio.lastResult.idioma.modulo_builder.resultado_modulo;
					modulo_name_vacio=servicio.lastResult.idioma.modulo_builder.modulo_name_vacio;
					btn_crear_modulo.label=servicio.lastResult.idioma.modulo_builder.boton_crear_modulo;
					boton_nuevo_modulo.label=servicio.lastResult.idioma.modulo_builder.boton_nuevo_modulo;
					btn_delete.label=servicio.lastResult.idioma.modulo_builder.boton_delete_modulo;
					boton_upload.label=servicio.lastResult.idioma.modulo_builder.boton_upload;
					mensaje_modulo_vacio=servicio.lastResult.idioma.modulo_builder.mensaje_modulo_vacio;
					relaciones.setItemAt({label:servicio.lastResult.idioma.modulo_builder.relacionship_tipo_0, data:0},0);
					relaciones.setItemAt({label:servicio.lastResult.idioma.modulo_builder.relacionship_tipo_1, data:1},1);
					relaciones.setItemAt({label:servicio.lastResult.idioma.modulo_builder.relacionship_tipo_2, data:2},2);
					relaciones.setItemAt({label:servicio.lastResult.idioma.modulo_builder.relacionship_tipo_3, data:3},3);
					combox_relaciones.dataProvider=relaciones;
					modulo_principal=servicio.lastResult.idioma.modulo_builder.modulo_principal;
					modulo_relacionado=servicio.lastResult.idioma.modulo_builder.modulo_relacionado;
					relacion_modulo_name=servicio.lastResult.idioma.modulo_builder.relacion_modulo_name;
					tipo_relacion=servicio.lastResult.idioma.modulo_builder.tipo_relacionado;
					btn_delete.toolTip=servicio.lastResult.idioma.modulo_builder.boton_delete_modulo;
					associacion.text=servicio.lastResult.idioma.modulo_builder.associacion;
					pertencia.text=servicio.lastResult.idioma.modulo_builder.pertencia;

				}
			}
			//////////////////////////////////////////////////////////////////
			public function treeChanged(event:Event):void {
				selectedNode=Tree(event.target).selectedItem as XML;
				if(selectedNode.@label!="App"){
					Modulo_name.text=selectedNode.@label;
					 if (componentes_text.selectedItem.data!="5"){
					enabled_componente(true);
					 }
			 		dataset.dataProvider={};
			 		tree_index=myTree.selectedIndex;
			 		dataset.dataProvider=Database.getInstance().component.findBySQL("select id,etiqueta,identificador,tamano,requerido,componente,tipo,modulo_relacionado,tipo_relacion from componentes where modulo_id='"+selectedNode.@data+"'");
				    this.id_modulo=selectedNode.@data;
				    combox_associaciones.dataProvider=Database.getInstance().mod.findBySQL("select id,name from modulos where id!="+this.id_modulo+"");
			        
				}

			}
			///////////////////////////////////////////////////////////////////////////////////////////

			private function showWindowDownload():void
			{
				var abrir:Download=Download(PopUpManager.createPopUp(this, Download , true));
				abrir.showCloseButton=true;
			    abrir.addEventListener("close",function(){PopUpManager.removePopUp(abrir)});
				PopUpManager.centerPopUp(abrir);

			}

			///////////////////////////////////////////////////////////////////////////////////////////


			private function showWindow():void
			{
				if(Modulo_name.text!=""){
					var abrir:Modelo_Relaciones=Modelo_Relaciones(PopUpManager.createPopUp(this, Modelo_Relaciones , true));
					abrir.id_modulo=this.id_modulo;
					abrir.showCloseButton=true;
					abrir.Modulo_name.text=Modulo_name.text;
					abrir.tiporelaciones.dataProvider=relaciones;
					abrir.buscar_todos_componentes(this.id_modulo);
					abrir.M_principal.text=modulo_principal;
					abrir.M_Relacionado.text=modulo_relacionado;
					abrir.T_relacion.text=tipo_relacion;
					abrir.modulo_lable_name.text=relacion_modulo_name;
					abrir.buscar_relaciones();
					abrir.myTree=this.myTree;
					PopUpManager.centerPopUp(abrir);
					abrir.addEventListener("close",function(){PopUpManager.removePopUp(abrir)});
					PopUpManager.centerPopUp(abrir);
				}else{
					Alert.show(mensaje_modulo_vacio);
				}
			}

			//////////////////////////////////////////////////////////////////////////////////////////

			public function Create_Tree (e:Event):void
			{
				myTree.dataProvider= IDEComponentes.getInstance().Crear_arbol(Database.getInstance().personData);
				var node:XMLList =new XMLList  (IDEComponentes.getInstance().Crear_arbol(Database.getInstance().personData));
				var MailBox:XMLListCollection=new XMLListCollection(node);
				myTree.expandItem(MailBox.getItemAt(0), true);
				this.id_modulo=null
				this.last_id=MailBox.child(MailBox.children().length()-1).@data
			}



			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function Eliminar_modulos(id_modulo:String):void
			{
			   
			    Database.getInstance().mod.deleteById(uint(id_modulo));
			    Database.getInstance().component.deleteAll(" modulo_id='"+id_modulo+"'",[]);
			   	Database.getInstance().relacion.deleteAll("modulo_relacionado='"+uint(id_modulo)+"'",[]);
			   	Modulo_name.text="";
			   	enabled_componente(false);
			    myTree.dataProvider=IDEComponentes.getInstance().Crear_arbol(Database.getInstance().mod.findBySQL("select id,name from Modulos"));
		      
			}
			


			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function new_modulo_add():void
			{
				enabled_componente(false);
				Modulo_name.text='';
				dataset.dataProvider={};
			}
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function enabled_componente(estado:Boolean):void
			{
				if(estado){
					Modulo_name.enabled=false;
					btn_crear_modulo.enabled=false;
				}else{
					Modulo_name.enabled=true;
					btn_crear_modulo.enabled=true;
            	}
				boton_nuevo_modulo.enabled=estado;
				componentes_text.enabled=estado;
				componente_etiqueta.enabled=estado;
				identificador_text.enabled=estado;
				Max_caracter_text.enabled=estado;
				requerido_componente.enabled=estado;
				tipo_componente.enabled=estado;
				agregar.enabled=estado;
				dataset.enabled=estado;
				borrar.enabled=estado;
				boton_upload.enabled=estado;
				combox_relaciones.enabled=estado
				combox_associaciones.enabled=estado

			}
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function validar_name():void
			{
				if(Modulo_name.text!='')
				{ cadena=validar_modulo_nombre(Modulo_name.text);
				  if(cadena.length==1&&cadena=="s"){
				  	Alert.show("Este nombre no puede ser utilizado,seleccione otro!");
				    }else{
				    Modulo_name.text=cadena;
				    ingresar_modelo();
				    }

				}else{
					Alert.show(modulo_name_vacio);
				}
			}
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

			public function ingresar_modelo():void
			{
				var mymod:Modulo=new Modulo();
				mymod.name=cadena;
				mymod.save();
				myTree.dataProvider=IDEComponentes.getInstance().Crear_arbol(mymod.findBySQL("select id,name from Modulos"));
				enabled_componente(true)
			}
         //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
          public function Delete(event:Event):void
        {
          if (dataset.selectedIndex>=0){ 	
            Alert.show( "Estas seguro?","Confirmación de Borrado", Alert.YES| Alert.NO,null,Delete_componente_BD,null,Alert.YES);
           }else{
          	Alert.show("Seleccione un elemento.");
          }
       }			

		
			/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function Delete_componente_BD(event:CloseEvent):void
			{
			if( event.detail == Alert.YES)
              {
				if(dataset.selectedIndex>=0){
					 this.id_modulo=((Database.getInstance().mod.findBySQL("select id from Modulos where name='"+Modulo_name.text+"'"))[0].id).toString();
					 this.modulo_relacionado=dataset.selectedItem.modulo_relacionado;
					 this.tipo_relacion=dataset.selectedItem.tipo_relacion
					 Database.getInstance().component.deleteById(dataset.selectedItem.id);
					 Database.getInstance().relacion.deleteAll(" modulo_principal='"+this.id_modulo+"' and modulo_relacionado='"+this.modulo_relacionado+"'",[]);
					 dataset.dataProvider=Database.getInstance().component.findBySQL("select id,etiqueta,identificador,tamano,requerido,componente,tipo,modulo_relacionado,tipo_relacion from componentes where modulo_id='"+this.id_modulo+"'");
					
	        	}else{
					Alert.show("Seleccione un elemento !");
				}
              }
			}
			
			/////////////////////////////////////////////////////////////////
			
			public function Add_Elemento():void
			{
		        if (componentes_text.selectedIndex.toString()!="5"){
					if(identificador_text.text!=""&&Max_caracter_text.text!=""&&componente_etiqueta.text!=""){
					 this.id_modulo=((Database.getInstance().mod.findBySQL("select id from Modulos where name='"+Modulo_name.text+"'"))[0].id).toString();
					 result=Database.getInstance().component.findBySQL("select id from componentes where etiqueta='"+componente_etiqueta.text+"' and modulo_id='"+this.id_modulo+"'")
		               if(result==null){
					     Crear_elemento(dataset);
		               }else{
		               	Alert.show("Este componente ya esta registrado");
		               }
				     }else{
					  Alert.show(mensaje_validacion_vacio);
					  }
				   }else{
						 var result:Array=new Array();
				          this.id_modulo=((Database.getInstance().mod.findBySQL("select id from modulos where name='"+Modulo_name.text+"'"))[0].id).toString();
				           result=Database.getInstance().relacion.findBySQL("select id from relacions where modulo_principal='"+this.id_modulo+"' and modulo_relacionado='"+combox_associaciones.selectedItem.id+"'")
		                  if(result==null){
						   	  if(combox_relaciones.selectedItem.data!="0"){	
							  	 if (combox_associaciones.visible==true){
							  	      Crear_elemento(dataset);	
							  	   }else{
							  	  	 Alert.show("Seleccione el modelo a relacionar.");	
							  	    }
							  	}else{
							  	  Alert.show("Seleccione el tipo associacion.");	
							  	}
							}else{
				               Alert.show("Este componente relacion ya esta registrado.");	
				          } 	
					 }
                     
   		       }
			
			

			///////////////////////////////////////////////////////////////////////////
			public function Crear_elemento(datagrid:DataGrid):void
			{
				     cont_id++;
					 Create_relaciones()
					 id=componentes_text.selectedItem.data;
					   if (id == "5" || id == "6" || id == "7"){
			              var component:Componente=new Componente();
				           component.modulo_id=this.id_modulo;
						   component.etiqueta=combox_associaciones.selectedItem.name;
						   component.identificador=combox_associaciones.selectedItem.name;
						   component.tamano="0";
						   component.componente=componentes_text.selectedItem.label;
						   component.componente_id=componentes_text.selectedItem.data;
						   component.requerido=requerido_componente.selected.toString();
						   component.tipo="Indeterminado";
						   component.modulo_relacionado=combox_associaciones.selectedItem.id;
						   component.tipo_relacion=combox_relaciones.selectedItem.data;
			           }else{
				          var component:Componente=new Componente();
				           component.modulo_id=this.id_modulo;
						   component.etiqueta=componente_etiqueta.text;
						   component.identificador=identificador_text.text;
						   component.tamano=Max_caracter_text.text;
						   component.componente=componentes_text.selectedItem.label;
						   component.componente_id=componentes_text.selectedItem.data;
						   component.requerido=requerido_componente.selected.toString();
						   component.tipo=tipo_componente.selectedLabel;
						   component.modulo_relacionado="0";
						   component.tipo_relacion="0";
				       }
			     	   componente_etiqueta.text=Max_caracter_text.text=identificador_text.text="";
				       component.save();
				       myTree.dataProvider=IDEComponentes.getInstance().Crear_arbol(Database.getInstance().mod.findBySQL("select id,name from Modulos"));
				       dataset.dataProvider=component.findBySQL("select id,etiqueta,identificador,tamano,requerido,componente,tipo,modulo_relacionado,tipo_relacion from componentes where modulo_id='"+this.id_modulo+"'");
				}
		

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


			public function Create_relaciones():void
			{
				 if(combox_relaciones.selectedItem.data!="0"){
				   Database.getInstance().relacion=new Relacion();
				   Database.getInstance().relacion.modulo_principal=this.id_modulo;
			       Database.getInstance().relacion.tipo_relacion=combox_relaciones.selectedItem.data;
                   Database.getInstance().relacion.modulo_relacionado= combox_associaciones.selectedItem.id;
                   Database.getInstance().relacion.save();
                }
			}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		public function Hbox_divider():void 
		{
		  if(!stado){
		     currentState == 'normal' ? currentState = 'panel_builder' : currentState = 'normal'
		  }else{
		  stado=false;
		  }
		 }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

		public function validar_modulo_nombre(nombre:String):String
		{  var cadena:String=nombre;
		   var last_caracter:String="";
		   var sw:int=0;
			while(cadena.length>1&&sw==0){
			    last_caracter=nombre.substring(cadena.length-1,cadena.length);
			   if (last_caracter!="s"){
		 	        sw=1;
		 	      }else{
		             if (last_caracter=="s"){
		             cadena=cadena.substring(0,cadena.length-1);
		              }else{
		          	     sw=1;
		    }
		        }
			}

			 return cadena;
		}

		public function change_associacion():void
		{
			if (componentes_text.selectedItem.data=="5"&&combox_relaciones.selectedItem.data!=0){
				pertencia.visible=true;
				combox_associaciones.visible=true;
			    combox_associaciones.dataProvider=Database.getInstance().mod.findBySQL("select id,name from modulos where name!='"+Modulo_name.text+"'");
			}else
			{
			  pertencia.visible=false;
		      combox_associaciones.visible=false;
		      if (combox_relaciones.selectedItem.data!=0){
			  Alert.show("La relación "+combox_relaciones.selectedItem.label+" es solo para componentes tipo associación !");
		      }
		      combox_relaciones.selectedIndex=0;

			}
		}
///////////////////////////////////////////////////////////////////////////////////////
		public function change_componente_combox():void
		{
	     if (componentes_text.selectedItem.data!="5"){
	       pertencia.visible=false;
		   combox_associaciones.visible=false;
		   combox_relaciones.selectedIndex=0;
		   componente_etiqueta.enabled=true;
		   identificador_text.enabled=true;
		   Max_caracter_text.enabled=true;
		   requerido_componente.enabled=true;
		   tipo_componente.enabled=true;
		  }else{
		   combox_associaciones.visible=true;	
		   componente_etiqueta.enabled=false;
		   identificador_text.enabled=false;
		   Max_caracter_text.enabled=false;
		   requerido_componente.enabled=false;
		   tipo_componente.enabled=false;
		  }
		 }
	    
///////////////////////////////////////////////////////////////////////////////////////

    public function proyecto_configuration():void
    {
    if (proyecto_name.text!=""){	
    	if (database_name.text!=""){
    	 Zipfile.getInstance().proyecto_name=proyecto_name.text;
    	  Zipfile.getInstance().database_name=database_name.text;
    	 database_name
		 viewstack1.selectedIndex=1
    	}else{
    	Alert.show("El nombre de la base de datos es obligatorio");	
         }
      }else{
      	Alert.show("El nombre del proyecto es obligatorio");
    	}	
    }
	    
	    
	    
      	]]>
	</mx:Script>
	<mx:Style source="css.css"/>

<mx:XML id="menuData">
    <root>
        <menuitem label="Delete" eventName="Delete"/>
    </root>
</mx:XML>
<mx:states>
   <mx:State name="normal"/>

        <mx:State name="panel_builder">
            <mx:SetProperty target="{panel_arbol}" name="width" value="0"/>
      </mx:State>
    </mx:states>

 <mx:transitions>
        <mx:Transition fromState="*" toState="*" >
            <mx:Parallel duration="700" >
                <mx:Resize target="{panel_arbol}" />
                <mx:Resize target="{panel_builder}" />
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>
<mx:ViewStack x="10" y="10" id="viewstack1" width="100%" height="100%" >
<mx:Canvas label="View 1" width="100%" height="100%">
<mx:Panel x="7" y="10" width="97%" height="96%" layout="absolute" title="Yoomko work with Php &gt;= 5.3">
	<mx:Button click="{proyecto_configuration();}" x="25" y="320" label="Crear"/>
	<mx:Label x="24" y="33" text="Proyecto"/>
	<mx:Label x="25" y="93" text="Base de datos"/>
	<mx:Label x="25" y="123" text="Nombre"/>
	<mx:Label x="25" y="174" text="Host  (Preferiblementes es localhost)"/>
	<mx:Label x="25" y="223" text="Usuario "/>
	<mx:Label x="25" y="272" text="Contraseña"/>
	<mx:TextInput id="proyecto_name" x="25" y="52" width="386"/>
	<mx:TextInput id="database_name" x="25" y="140" width="386"/>
	<mx:TextInput x="25" y="192" width="386"/>
	<mx:HRule x="25" y="110" width="93%" height="1"/>
	<mx:TextInput x="25" y="241" width="386"/>
	<mx:TextInput x="25" y="289" width="386"/>
</mx:Panel>
</mx:Canvas>
<mx:Canvas label="Editor" width="100%" height="100%" showEffect="WipeDown" hideEffect="WipeUp">
<mx:HDividedBox creationComplete="init();hbox1.moveDivider(0,90);Hbox_divider()" id="hbox1" y="10"  width="99%" height="100%">
		<mx:Panel  click=" Hbox_divider();" id="panel_arbol" width="95%" height="98%" >
		   <mx:Tree rightClick="{showMenu(event)}" click="stado=true;" defaultLeafIcon="{ico}"  id="myTree" width="100%" height="100%" labelField="@label" showRoot="false" change="treeChanged(event)" />
		</mx:Panel>
		<mx:Panel titleIcon="{ico}" click=" Hbox_divider();" id="panel_builder" width="837" height="98%" >
			<mx:Canvas click="stado=true;" id="builder"  height="100%" width="100%">
				<mx:Label id="modulo_name" x="10" y="36" fontWeight="normal" fontSize="11"/>
				<mx:TextInput restrict="0-9a-z" id='Modulo_name' x="163" y="34" width="469"/>
				<mx:Label id="modulo_tipo" x="10" y="91"  fontWeight="normal" fontSize="11"/>
				<mx:ComboBox change="change_componente_combox()" dataProvider="{lista_componentes}"  id="componentes_text"  x="163" y="90" width="469" enabled="false"></mx:ComboBox>
				<mx:Label id="etiqueta" x="10" y="123" fontWeight="normal"/>
				<mx:TextInput x="163" y="121" id="componente_etiqueta" width="469" enabled="false" maxChars="40"/>
				<mx:Label id="identificador" x="10" y="151"  fontWeight="normal" fontSize="11"/>
				<mx:TextInput restrict="0-9a-zA-Z|_" id="identificador_text" x="163" y="150" width="469" enabled="false" maxChars="20"/>
				<mx:HRule x="160" y="19" width="472" strokeColor="#7E9D9D" themeColor="#000000" height="1"/>
				<mx:HRule x="160" y="75" width="472" strokeColor="#7E9D9D" height="1"/>
				<mx:Label id="titulo_modulo_name" x="10" y="9" fontSize="12" fontWeight="bold"/>
				<mx:Label id="componentes" x="10" y="64" fontSize="12" fontWeight="bold"/>
				<mx:Label id="Max_caracter" x="10" y="181" fontSize="11" fontWeight="normal"/>
				<mx:TextInput restrict="0-9"  id="Max_caracter_text" x="163" y="179" width="469" maxChars="5" enabled="false"/>
				<mx:CheckBox x="163" y="206" id="requerido_componente" enabled="true" selected="true"/>
				<mx:ComboBox  dataProvider="{tipo_dato}" id="tipo_componente"  x="163" y="271" width="469" enabled="false"></mx:ComboBox>
				<mx:Button click="Add_Elemento()"   id="agregar" x="163" y="302"  width="100" enabled="false"/>
				<mx:Button click="Delete(event)"  id="borrar" width="95" x="10" y="{(dataset.y+dataset.height)+8}" enabled="false"/>
				<mx:Button click="showWindowDownload()"  x="110" y="{(dataset.y+dataset.height)+8}" enabled="false" id="boton_upload" width="77"/>
				<mx:Label id="tipo_valores" x="10" y="274" fontSize="11" fontWeight="normal"/>
				<mx:Label id="datos" x="10" y="335"/>
				<mx:DataGrid horizontalScrollPolicy="auto" id="dataset" x="10" y="355" width="98%" height="204"  enabled="false">
					<mx:columns>
						<mx:DataGridColumn visible="false" id="data_id" dataField="id" width="40"/>
						<mx:DataGridColumn id="data_etiqueta" dataField="etiqueta"/>
						<mx:DataGridColumn width="130" id="data_Max_caracter" dataField="tamano"/>
						<mx:DataGridColumn width="130" id="data_componente" dataField="componente"/>
						<mx:DataGridColumn id="data_requerido" dataField="requerido"/>
						<mx:DataGridColumn id="data_tipo" dataField="tipo"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:Label id="requerido" x="10" y="208" fontWeight="normal"/>
				<mx:Label id="associacion" x="10" y="238" fontWeight="normal"/>
				<mx:Button id="btn_crear_modulo" x="640" y="34"  click="validar_name()"/>
				<mx:Button click="new_modulo_add()"   x="695" y="34" id="boton_nuevo_modulo"/>
				<mx:Button click="Eliminar_modulos(this.id_modulo)" x="749" y="34" width="43" id="btn_delete"/>
				<mx:ComboBox change="change_associacion()"  x="163" y="232" id="combox_relaciones"></mx:ComboBox>
				<mx:Label visible="false" x="329" y="234" id="pertencia" width="25"/>
				<mx:ComboBox id="combox_associaciones" labelField="name"  visible="false"   x="362" y="231.5" width="270"></mx:ComboBox>
			</mx:Canvas>
		</mx:Panel>
	</mx:HDividedBox>
</mx:Canvas>
</mx:ViewStack>
</mx:WindowedApplication>