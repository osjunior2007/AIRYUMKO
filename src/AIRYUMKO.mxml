<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication  title="YUMKOO"  initialize="Database.getInstance().initAndOpenDatabase()"  backgroundGradientAlphas="[1.0, 0.32]" backgroundGradientColors="[#A0B8C0, #878A8D]" minWidth="930" minHeight="700" xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="init()">
	<mx:HTTPService url="español.xml"   requestTimeout="0"   resultFormat="object" id="idiomas" result="Cargar_idioma(event,idiomas); "  useProxy="false"  method="POST" >
	</mx:HTTPService> 
	<mx:Script> 
		<![CDATA[
			import mx.controls.Image;
			import mx.collections.XMLListCollection;
			
			
			[Bindable]
			[Embed(source="img/flexicono.png")]
			private var ico:Class;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent
			import mx.controls.Alert;
			import Clases.IDEComponentes;
			import Clases.MC_RubyonRails;
			import Clases.Zipfile;
			import mx.managers.PopUpManager;
			import Clases.Database;
			public var cont_id:int=0; 
			public var mensaje_eliminar:String;
			public var mensaje_modulo_name:String;
			public var mensaje_modulo_vacio:String;
			public var mensaje_validacion_vacio:String;
			public var resultado_modulo:String;
			public var modulo_name_vacio:String;
			public var modulo_principal:String;
			public var modulo_relacionado:String;
			public var tipo_relacion:String;
			public var relacion_modulo_name:String;
			public var id_modulo:String;
			public var datostree:String="";
			public var objects:Object = {};
			public var elementos:Object = {};
			[Bindable]
			public var selectedNode:XML;
			[Bindable] public var lista_componentes:ArrayCollection = new ArrayCollection([{label:"Campo de Texto", data:1},{label:"Área de texto", data:2},/*{label:"Moneda", data:3},*/{label:"Fecha", data:4},{label:"Encriptado", data:5},/*{label:"Teléfono", data:6},*/{label:"Opción", data:7}/*,{label:"Desplegable (solo para relaciones 'llaves foraneas')", data:8}*/]);
			[Bindable] public var relaciones:ArrayCollection = new ArrayCollection([{label:"Uno a Uno", data:1},{label:"Muchos a Uno", data:2},{label:"Muchos a Muchos", data:3}]);
			[Bindable] public var tipo_dato:ArrayCollection = new ArrayCollection([{label:"Numerico", data:1},{label:"Alfanumerico", data:2}]);
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			var stado:Boolean=false;
			var cadena:String="";
			public function init():void
			{ 
				idiomas.send();
				enabled_componente(false);
				buscar_modelo_To_Tree();
				var screenBounds:Rectangle = Screen.mainScreen.bounds;
				this.move((screenBounds.width-this.width)/2,(screenBounds.height-this.height)/2);
				this.usePreloader=true;
			}  
			
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			public function Cargar_idioma(event:ResultEvent,servicio:HTTPService):void{
				if(event.message.body.toString()!=""){
					titulo_modulo_name.text=servicio.lastResult.idioma.modulo_builder.titulo_modulo_name;
					componentes.text=servicio.lastResult.idioma.modulo_builder.componentes;
					modulo_tipo.text=servicio.lastResult.idioma.modulo_builder.componente_tipo;
					modulo_name.text=servicio.lastResult.idioma.modulo_builder.componente_name;
					identificador.text=servicio.lastResult.idioma.modulo_builder.identificador;
					Max_caracter.text=servicio.lastResult.idioma.modulo_builder.Max_caracter;
					tipo_valores.text=servicio.lastResult.idioma.modulo_builder.tipo_valores;
					datos.text=servicio.lastResult.idioma.modulo_builder.datos;
					data_nombre.headerText=servicio.lastResult.idioma.modulo_builder.data_nombre;
					data_id.headerText=servicio.lastResult.idioma.modulo_builder.data_id;
					data_Max_caracter.headerText=servicio.lastResult.idioma.modulo_builder.data_Max_caracter;
					data_componente.headerText=servicio.lastResult.idioma.modulo_builder.data_componente;
					data_requerido.headerText=servicio.lastResult.idioma.modulo_builder.data_requerido;
					data_tipo.headerText=servicio.lastResult.idioma.modulo_builder.data_tipo;
					data_etiqueta.headerText=servicio.lastResult.idioma.modulo_builder.data_etiqueta;
					agregar.label=servicio.lastResult.idioma.modulo_builder.boton_agregar;
					borrar.label=servicio.lastResult.idioma.modulo_builder.boton_borrar;
					panel_arbol.title=servicio.lastResult.idioma.modulo_builder.panel_arbol;
					panel_builder.title=servicio.lastResult.idioma.modulo_builder.panel_builder;
					mensaje_eliminar=servicio.lastResult.idioma.modulo_builder.mensaje_eliminar;
					mensaje_modulo_name=servicio.lastResult.idioma.modulo_builder.mensaje_modulo_name;
					mensaje_validacion_vacio=servicio.lastResult.idioma.modulo_builder.mensaje_validacion_vacio;
					requerido.text=servicio.lastResult.idioma.modulo_builder.requerido;
					etiqueta.text=servicio.lastResult.idioma.modulo_builder.data_etiqueta;
					resultado_modulo=servicio.lastResult.idioma.modulo_builder.resultado_modulo;
					modulo_name_vacio=servicio.lastResult.idioma.modulo_builder.modulo_name_vacio;
					btn_crear_modulo.label=servicio.lastResult.idioma.modulo_builder.boton_crear_modulo;
					boton_nuevo_modulo.label=servicio.lastResult.idioma.modulo_builder.boton_nuevo_modulo;
					boton_upload.label=servicio.lastResult.idioma.modulo_builder.boton_upload;
					relacionship.label=servicio.lastResult.idioma.modulo_builder.relacionship;
					mensaje_modulo_vacio=servicio.lastResult.idioma.modulo_builder.mensaje_modulo_vacio;
					relaciones.setItemAt({label:servicio.lastResult.idioma.modulo_builder.relacionship_tipo_1, data:0},0);
					relaciones.setItemAt({label:servicio.lastResult.idioma.modulo_builder.relacionship_tipo_2, data:1},1);
					relaciones.setItemAt({label:servicio.lastResult.idioma.modulo_builder.relacionship_tipo_3, data:2},2);
					modulo_principal=servicio.lastResult.idioma.modulo_builder.modulo_principal;
					modulo_relacionado=servicio.lastResult.idioma.modulo_builder.modulo_relacionado;
					relacion_modulo_name=servicio.lastResult.idioma.modulo_builder.relacion_modulo_name;
					tipo_relacion=servicio.lastResult.idioma.modulo_builder.tipo_relacionado;
				}
			}        
			//////////////////////////////////////////////////////////////////
			public function treeChanged(event:Event):void {
				selectedNode=Tree(event.target).selectedItem as XML;
				if(selectedNode.@label!="App"){
					Modulo_name.text=selectedNode.@label;
					enabled_componente(true);
					enabled_componente(true);
					dataset.dataProvider={};
					Crear_tabla_componente(selectedNode.@data)
					this.id_modulo=selectedNode.@data;
				}
			}             
			///////////////////////////////////////////////////////////////////////////////////////////
			
			private function showWindowDownload():void
			{
				var abrir:Download=Download(PopUpManager.createPopUp(this, Download , true));
				abrir.showCloseButton=true;
			    abrir.addEventListener("close",function(){PopUpManager.removePopUp(abrir)});
				PopUpManager.centerPopUp(abrir);	
				
			}
			
			///////////////////////////////////////////////////////////////////////////////////////////
			
			
			private function showWindow():void
			{
				if(Modulo_name.text!=""){	
					var abrir:Modelo_Relaciones=Modelo_Relaciones(PopUpManager.createPopUp(this, Modelo_Relaciones , true));
					abrir.id_modulo=this.id_modulo;
					abrir.showCloseButton=true;
					abrir.title=relacionship.label;
					abrir.Modulo_name.text=Modulo_name.text;
					abrir.tiporelaciones.dataProvider=relaciones;
					abrir.buscar_todos_componentes(this.id_modulo);
					abrir.M_principal.text=modulo_principal;
					abrir.M_Relacionado.text=modulo_relacionado;
					abrir.T_relacion.text=tipo_relacion;
					abrir.modulo_lable_name.text=relacion_modulo_name;
					abrir.buscar_relaciones();
					abrir.myTree=this.myTree;
					PopUpManager.centerPopUp(abrir);
					abrir.addEventListener("close",function(){PopUpManager.removePopUp(abrir)});
					PopUpManager.centerPopUp(abrir);		
				}else{
					Alert.show(mensaje_modulo_vacio);
				}
			}
		
			//////////////////////////////////////////////////////////////////////////////////////////             
			
			public function Create_Tree (e:Event):void
			{
				myTree.dataProvider= IDEComponentes.getInstance().Crear_arbol(Database.getInstance().personData);
				var node:XMLList =new XMLList  (IDEComponentes.getInstance().Crear_arbol(Database.getInstance().personData));
				var MailBox:XMLListCollection=new XMLListCollection(node);
				myTree.expandItem(MailBox.getItemAt(0), true);
			}
			public function buscar_modelo_To_Tree():void
			{
				Database.getInstance().dbStatement.addEventListener(SQLEvent.RESULT, Create_Tree);
				Database.getInstance().getDatos("select id_modulo,nombre from modulos");
				
			}              
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function Crear_tabla_componente(id:String):void
			{
				Database.getInstance().dbStatement.removeEventListener(SQLEvent.RESULT, Create_Tree);
				Database.getInstance().getDatos("select id_componente,etiqueta,identificador,tamano,requerido,componente,tipo from componentes where id_modulo='"+id+"'");
				dataset.dataProvider=Database.getInstance().personData;
			}  
			
			
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function new_modulo_add():void
			{
				enabled_componente(false);
				Modulo_name.text='';
				dataset.dataProvider={};
			}         
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function enabled_componente(estado:Boolean):void
			{
				if(estado){
					Modulo_name.enabled=false;
					btn_crear_modulo.enabled=false;
				}else{
					Modulo_name.enabled=true;
					btn_crear_modulo.enabled=true;
					
				}
				boton_nuevo_modulo.enabled=estado;
				componentes_text.enabled=estado;
				componente_etiqueta.enabled=estado;
				identificador_text.enabled=estado;
				Max_caracter_text.enabled=estado;
				requerido_componente.enabled=estado;
				tipo_componente.enabled=estado;
				agregar.enabled=estado;
				relacionship.enabled=estado;
				dataset.enabled=estado;
				borrar.enabled=estado;
				boton_upload.enabled=estado;
				
			}  
			///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			public function validar_name():void
			{
				if(Modulo_name.text!='')
				{ cadena=validar_modulo_nombre(Modulo_name.text);   
				  if(cadena.length==1&&cadena=="s"){
				  	Alert.show("Este nombre no puede ser utilizado,seleccione otro!");
				    }else{
				    Modulo_name.text=cadena;	
				    ingresar_modelo();	
				    }
					
				}else{
					Alert.show(modulo_name_vacio);
				}	
			}    
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			public function ingresar_modelo():void
			{
				Database.getInstance().SetDatos("insert into modulos select distinct null ,'"+cadena+"s','"+MC_RubyonRails.getInstance().set_controllador((cadena.substr(0,1).toLocaleUpperCase()+cadena.substr(1,cadena.length))+"s")+"','"+MC_RubyonRails.getInstance().set_modelo(cadena)+"' from modulos where not exists (select * from modulos where nombre='"+cadena+"') union select null ,'"+cadena+"s','"+MC_RubyonRails.getInstance().set_controllador((cadena.substr(0,1).toLocaleUpperCase()+cadena.substr(1,cadena.length))+"s")+"','"+MC_RubyonRails.getInstance().set_modelo(cadena)+"'");
				buscar_modelo_To_Tree();
				enabled_componente(true);
				
			}
			
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			public function Delete_componente_BD():void
			{
				if(dataset.selectedIndex>=0){
					Database.getInstance().dbStatement.addEventListener(SQLEvent.RESULT,function(){dataset.dataProvider={}});
					Database.getInstance().SetDatos("delete from componentes where id_componente='"+dataset.selectedItem.id_componente+"'");	
					Database.getInstance().getDatos("select id_componente,etiqueta,identificador,tamano,requerido,componente,tipo from componentes where id_modulo='"+this.id_modulo+"'");
					dataset.dataProvider=Database.getInstance().personData;
				}else{
					Alert.show("Seleccione un elemento !");
				}
			} 
			///////////////////////////////////////////////////////////////////////////             
			public function Crear_elemento(datagrid:DataGrid):void{
				if(identificador_text.text!=""&&Max_caracter_text.text!=""&&componente_etiqueta.text!=""){ 
					cont_id++;
					Database.getInstance().dbStatement.addEventListener(SQLEvent.RESULT,resultado_componentes);
					agregar.enabled=false;
					Database.getInstance().SetDatos("insert into componentes values (null,"+this.id_modulo+",'"+componente_etiqueta.text+"','"+identificador_text.text+"','"+Max_caracter_text.text+"','"+componentes_text.selectedItem.label+"','"+componentes_text.selectedIndex.toString()+"','"+requerido_componente.selected+"','"+tipo_componente.selectedLabel+"')");
					componente_etiqueta.text=Max_caracter_text.text=identificador_text.text="";
				}else{
					Alert.show(mensaje_validacion_vacio);
				}
			}   
			public function resultado_componentes(e:Event):void
			{
				Database.getInstance().dbStatement.removeEventListener(SQLEvent.RESULT,resultado_componentes);
				Database.getInstance().getDatos("select id_componente,etiqueta,identificador,tamano,requerido,componente,tipo from componentes where id_modulo='"+this.id_modulo+"'");
				dataset.dataProvider=Database.getInstance().personData;   	
				agregar.enabled=true;
				
			}                            
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
		public function Hbox_divider():void
		{
		  if(!stado){  
		     currentState == 'normal' ? currentState = 'panel_builder' : currentState = 'normal'
		  }else{
		  stado=false;	
		  }
		 }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
		public function validar_modulo_nombre(nombre:String):String
		{  var cadena:String=nombre;
		   var last_caracter:String=""; 
		   var sw:int=0;
			while(cadena.length>1&&sw==0){
			    last_caracter=nombre.substring(cadena.length-1,cadena.length);
			   if (last_caracter!="s"){
		 	        sw=1;
		 	      }else{
		             if (last_caracter=="s"){ 	
		             cadena=cadena.substring(0,cadena.length-1);
		              }else{
		          	     sw=1;
		    }
		        }	
			}
			
			 return cadena;
		}	
		]]>
		
	</mx:Script>
	<mx:Style source="css.css"/> 
<mx:states>
   <mx:State name="normal"/>

        <mx:State name="panel_builder">
            <mx:SetProperty target="{panel_arbol}" name="width" value="0"/>
      </mx:State>
    </mx:states>	
	
 <mx:transitions>
        <mx:Transition fromState="*" toState="*" >
            <mx:Parallel duration="700" >
                <mx:Resize target="{panel_arbol}" />
                <mx:Resize target="{panel_builder}" />
            </mx:Parallel>
        </mx:Transition>
    </mx:transitions>	
	
	<mx:HDividedBox  creationComplete="hbox1.moveDivider(0,90);Hbox_divider()" id="hbox1" y="10"  width="99%" height="100%">  
		<mx:Panel click=" Hbox_divider();" id="panel_arbol" width="95%" height="98%" >
		   <mx:Tree click="stado=true;" defaultLeafIcon="{ico}"  id="myTree" width="100%" height="100%" labelField="@label" showRoot="false" change="treeChanged(event)" />
		</mx:Panel>
		<mx:Panel titleIcon="{ico}" click=" Hbox_divider();" id="panel_builder" width="837" height="98%" >
			<mx:Canvas click="stado=true;" id="builder"  height="100%" width="100%">
				<mx:Label id="modulo_name" x="10" y="36" fontWeight="normal" fontSize="11"/>
				<mx:TextInput restrict="0-9a-z" id='Modulo_name' x="163" y="34" width="469"/>
				<mx:Label id="modulo_tipo" x="10" y="91"  fontWeight="normal" fontSize="11"/>
				<mx:ComboBox dataProvider="{lista_componentes}"  id="componentes_text"  x="163" y="90" width="469" enabled="false"></mx:ComboBox>
				<mx:Label id="etiqueta" x="10" y="123" fontWeight="normal"/>
				<mx:TextInput x="163" y="121" id="componente_etiqueta" width="469" enabled="false" maxChars="40"/>
				<mx:Label id="identificador" x="10" y="151"  fontWeight="normal" fontSize="11"/>
				<mx:TextInput restrict="0-9a-zA-Z|_" id="identificador_text" x="163" y="150" width="469" enabled="false" maxChars="20"/>
				<mx:HRule x="160" y="19" width="472" strokeColor="#7E9D9D" themeColor="#000000" height="1"/>
				<mx:HRule x="160" y="75" width="472" strokeColor="#7E9D9D" height="1"/>
				<mx:Label id="titulo_modulo_name" x="10" y="9" fontSize="12" fontWeight="bold"/>
				<mx:Label id="componentes" x="10" y="64" fontSize="12" fontWeight="bold"/>
				<mx:Label id="Max_caracter" x="10" y="181" fontSize="11" fontWeight="normal"/>
				<mx:TextInput restrict="0-9"  id="Max_caracter_text" x="163" y="179" width="469" maxChars="5" enabled="false"/>
				<mx:CheckBox x="163" y="206" id="requerido_componente" enabled="true" selected="true"/>
				<mx:ComboBox  dataProvider="{tipo_dato}" id="tipo_componente"  x="163" y="231" width="469" enabled="false"></mx:ComboBox>
				<mx:Button click="Crear_elemento(dataset)"   id="agregar" x="163" y="262"  width="100" enabled="false"/>
				<mx:Button click="showWindow()"  x="271" y="262" width="117" id="relacionship"/>
				<mx:Button click="Delete_componente_BD();"  id="borrar" width="95" x="10" y="{(dataset.y+dataset.height)+8}" enabled="false"/>
				<mx:Button click="showWindowDownload()"  x="110" y="{(dataset.y+dataset.height)+8}" enabled="false" id="boton_upload" width="77"/>
				<mx:Label id="tipo_valores" x="10" y="234" fontSize="11" fontWeight="normal"/>
				<mx:Label id="datos" x="10" y="295"/>
				<mx:DataGrid horizontalScrollPolicy="auto" id="dataset" x="10" y="315" width="98%" height="40%"  enabled="false">
					<mx:columns>
						<mx:DataGridColumn visible="false" id="data_id" dataField="id_componente" width="40"/>
						<mx:DataGridColumn id="data_nombre" dataField="identificador"/>
						<mx:DataGridColumn id="data_etiqueta" dataField="etiqueta"/>
						<mx:DataGridColumn width="130" id="data_Max_caracter" dataField="tamano"/>
						<mx:DataGridColumn width="130" id="data_componente" dataField="componente"/>
						<mx:DataGridColumn id="data_requerido" dataField="requerido"/>
						<mx:DataGridColumn id="data_tipo" dataField="tipo"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:Label id="requerido" x="10" y="208" fontWeight="normal"/>
				<mx:Button id="btn_crear_modulo" x="640" y="34"  click="buscar_modelo_To_Tree();validar_name()"/>
				<mx:Button click="new_modulo_add()"   x="695" y="34" id="boton_nuevo_modulo"/>
				
			</mx:Canvas>    
		</mx:Panel>
	</mx:HDividedBox>	
</mx:WindowedApplication>
